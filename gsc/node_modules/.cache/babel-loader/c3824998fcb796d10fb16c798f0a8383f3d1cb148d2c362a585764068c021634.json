{"ast":null,"code":"/*import React, { Component } from \"react\";\nimport ee from \"@google/earthengine\";\n\nclass Map extends Component {\n  componentDidMount() {\n    // Load the Google Maps API\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCwz8tYryeQJeA_CI2nOvxzAwpQd1c80Pc&libraries=drawing&v=3.44`;\n    script.async = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      // Initialize the map and drawing manager\n      this.initMap();\n    };\n  }\n\n  initMap() {\n    // Initialize the Google Map\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 37.76, lng: -122.45 },\n      zoom: 10\n    });\n\n    // Initialize the drawing manager\n    const drawingManager = new window.google.maps.drawing.DrawingManager({\n      drawingMode: window.google.maps.drawing.OverlayType.RECTANGLE,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [window.google.maps.drawing.OverlayType.RECTANGLE]\n      },\n      rectangleOptions: {\n        fillColor: \"#00FF00\",\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        strokeColor: \"#00FF00\",\n        clickable: true,\n        editable: true,\n        draggable: true\n      }\n    });\n\n    // Add the drawing manager to the map\n    drawingManager.setMap(map);\n\n    // Listen for rectangle complete event\n    window.google.maps.event.addListener(drawingManager, \"rectanglecomplete\", (rectangle) => {\n      // Get the rectangle's bounds and convert to Earth Engine geometry\n      const bounds = rectangle.getBounds();\n      const ne = bounds.getNorthEast();\n      const sw = bounds.getSouthWest();\n      const geometry = ee.Geometry.Rectangle([sw.lng(), sw.lat(), ne.lng(), ne.lat()]);\n\n      // Load a Sentinel-2 image collection and add it to the map\n      const collection = ee.ImageCollection(\"COPERNICUS/S2_SR\")\n        .filterBounds(geometry)\n        .filterDate(\"2022-01-01\", \"2022-03-01\")\n        .median()\n        .clip(geometry);\n\n      const visParams = { bands: [\"B4\", \"B3\", \"B2\"], min: 0, max: 3000 };\n\n      map.overlayMapTypes.insertAt(\n        0,\n        new ee.MapTypeOverlay({ name: \"Sentinel-2 SR\", imageCollection: collection, visParams: visParams })\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"map\" style={{ width: \"100%\", height: \"500px\" }}></div>\n      </div>\n    );\n  }\n}\n\nexport default Map;*/","map":{"version":3,"names":[],"sources":["/Users/arnavrastogi/Downloads/gsc/src/Map.js"],"sourcesContent":["/*import React, { Component } from \"react\";\nimport ee from \"@google/earthengine\";\n\nclass Map extends Component {\n  componentDidMount() {\n    // Load the Google Maps API\n    const script = document.createElement(\"script\");\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCwz8tYryeQJeA_CI2nOvxzAwpQd1c80Pc&libraries=drawing&v=3.44`;\n    script.async = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      // Initialize the map and drawing manager\n      this.initMap();\n    };\n  }\n\n  initMap() {\n    // Initialize the Google Map\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 37.76, lng: -122.45 },\n      zoom: 10\n    });\n\n    // Initialize the drawing manager\n    const drawingManager = new window.google.maps.drawing.DrawingManager({\n      drawingMode: window.google.maps.drawing.OverlayType.RECTANGLE,\n      drawingControl: true,\n      drawingControlOptions: {\n        position: window.google.maps.ControlPosition.TOP_CENTER,\n        drawingModes: [window.google.maps.drawing.OverlayType.RECTANGLE]\n      },\n      rectangleOptions: {\n        fillColor: \"#00FF00\",\n        fillOpacity: 0.2,\n        strokeWeight: 2,\n        strokeColor: \"#00FF00\",\n        clickable: true,\n        editable: true,\n        draggable: true\n      }\n    });\n\n    // Add the drawing manager to the map\n    drawingManager.setMap(map);\n\n    // Listen for rectangle complete event\n    window.google.maps.event.addListener(drawingManager, \"rectanglecomplete\", (rectangle) => {\n      // Get the rectangle's bounds and convert to Earth Engine geometry\n      const bounds = rectangle.getBounds();\n      const ne = bounds.getNorthEast();\n      const sw = bounds.getSouthWest();\n      const geometry = ee.Geometry.Rectangle([sw.lng(), sw.lat(), ne.lng(), ne.lat()]);\n\n      // Load a Sentinel-2 image collection and add it to the map\n      const collection = ee.ImageCollection(\"COPERNICUS/S2_SR\")\n        .filterBounds(geometry)\n        .filterDate(\"2022-01-01\", \"2022-03-01\")\n        .median()\n        .clip(geometry);\n\n      const visParams = { bands: [\"B4\", \"B3\", \"B2\"], min: 0, max: 3000 };\n\n      map.overlayMapTypes.insertAt(\n        0,\n        new ee.MapTypeOverlay({ name: \"Sentinel-2 SR\", imageCollection: collection, visParams: visParams })\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"map\" style={{ width: \"100%\", height: \"500px\" }}></div>\n      </div>\n    );\n  }\n}\n\nexport default Map;*/\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}